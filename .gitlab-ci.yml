IMAGE_NAME: $CI_REGISTRY/root/angular-kubernetes-deployment
TOKEN: "eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhZG1pbi11c2VyLXRva2VuLTZ6MjYyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImFkbWluLXVzZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiIwZDE0NWI5Yy1iMjY2LTQ2YWYtYTk2NC1lOGYzYzhmZWM3ZmMiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06YWRtaW4tdXNlciJ9.OVpaM_lcOl5bPx2lJgZY72T-tfqbu_aEFSLvbbmSSoXVDYSUUSUSwk1PHgrfDglwwwt6CHV5Z1Vc7S6iII2olVTWppMu7rS32d-IT0DNECpC6ze8aAZ_XxouIibjByudBp4jUVntGvU-FA-GWIHh1Z7MDonYNsOuBCO2TOTQu30SG4Xf5N5WkBk8KjdbQBhZuRi8e_njqgWPW4g-gVrSPfuZXrnll5Pi7uMak7-nD3l5Ov-inPSv6kw1a5RTj3j7rObaW4SzkFRmWH9mlVSqL6emuiewhrjfiDZ4o_Zg_GWAHq9YHK_j_rVSZWEVPwjcBoWmolfMYiMT-N3rA3-6gg"


stages:
  - build
  - k8-deploy

build:dockette/nodejs:
  stage: 'build'
  script:
    - nodejs -v
    - npm -v
    - apt-get install rsync -y > /dev/null
    - ng new angular-devops > /dev/null
    - /bin/cp -f package.json angular-devops/package.json
    - /usr/bin/rsync -a src/ angular-devops/src/
    - /usr/bin/rsync -a angular-devops/ .
    - ng build --prod > /dev/null
    - ls -la -F dist/angular-devops/
    - /bin/mkdir html
    - /usr/bin/rsync -a dist/angular-devops/ html/
    - /bin/ls -la -F html/

  cache:
    paths:
      - node_modules/
  artifacts:
    when: on_success
    name: '$CI_JOB_NAME-$CI_COMMIT_REF_NAME'
    paths:
      - html/
      
k8-deploy:
 image: alpine/k8s:1.13.12
 stage: 'k8-deploy'
 dependencies:
        - build:dockette/nodejs
 services:
        - docker:dind
 cache:
    key: “builder”
    paths:
        - ./.build
 script:
    -   kubectl config set-cluster kubernetes --server="https://192.168.100.14:6443" --insecure-skip-tls-verify=true
    -   kubectl config set-credentials admin-user --token=$TOKEN
    -   kubectl config set-context default-context --cluster=kubernetes --user=admin-user
    -   kubectl config use-context default-context
    -   kubectl get cs
    -   /bin/cp template/nginx-deploy-service angularweb.yaml 
    -   kubectl apply -f angularweb.yaml
    -   sleep 30
    -   /bin/ls -la -F html/
    -   for pod in `kubectl get pods -o=name | grep angularweb| sed "s/^.\{4\}//"`; do echo "copying artifacts to $pod"; kubectl cp html $pod:/usr/share/nginx/; done

 environment:
    name: staging
    url: http://192.168.100.14:30036/
 when: manual
 only:
  - master
